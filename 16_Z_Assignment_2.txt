Your company has recently decided to use Docker to run containers in production. They have built some Docker images to run their own proprietary software and need a place to store and manage these images. You have been asked to build a secure, private Docker registry for use by the company. In order to verify that everything works, you have also been asked to configure a Docker workstation server to push to and pull from the registry.

To complete this lab, ensure that the following requirements are met for the registry:

1. A private Docker registry is running on the Docker registry server using version 2 of the registry image.
2. The container name for the registry should be registry.
3. The registry should always automatically restart if it stops or the Docker daemon or server restarts.
4. The registry should require authentication. Set up an initial account with the username docker and the password d0ck3rrU73z.
5. The registry should use TLS with a self-signed certificate.
6. The registry should listen on port 443.


Set up the Docker workstation server to meet the following requirements:

1. Docker is logged in to the private registry.
2. Docker is configured to accept the self-signed cert. Do not turn off certificate verification using the insecure-registries setting.
3. To confirm that everything is working, push a test image called ip-10-0-1-101:443/test-image:1 to the private registry. You can pull any image from Docker hub and tag it with ip-10-0-1-101:443/test-image:1 as a test.
4. Delete the test image locally and pull it from the registry.

[NOTE: Write the series of commands to achieve above in this file below the question scenario with documentation]

Good luck!

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--Soltions------

creating registry directory
root@ip-172-31-13-74:/# mkdir registry

root@ip-172-31-13-74:/# cd registry

--creating auth directory
root@ip-172-31-13-74:/registry#
$ mkdir auth

root@ip-172-31-13-74:/registry# 
$ cd auth

root@ip-172-31-13-74:/registry/auth# 
$ ls

root@ip-172-31-13-74:/registry/auth# 
$ cd ..

root@ip-172-31-13-74:/registry/auth# cd ..
root@ip-172-31-13-74:/registry# 
$ docker run --entrypoint htpasswd registry:2 -Bbn docker d0ck3rrU73z > auth/htpasswd
Unable to find image 'registry:2' locally
2: Pulling from library/registry
c87736221ed0: Pulling fs layer
1cc8e0bb44df: Pulling fs layer
54d33bcb37f5: Pulling fs layer
e8afc091c171: Pulling fs layer
b4541f6d3db6: Pulling fs layer
e8afc091c171: Waiting
b4541f6d3db6: Waiting
54d33bcb37f5: Verifying Checksum
54d33bcb37f5: Download complete
1cc8e0bb44df: Verifying Checksum
1cc8e0bb44df: Download complete
c87736221ed0: Verifying Checksum
c87736221ed0: Download complete
c87736221ed0: Pull complete
1cc8e0bb44df: Pull complete
b4541f6d3db6: Verifying Checksum
b4541f6d3db6: Download complete
e8afc091c171: Verifying Checksum
e8afc091c171: Download complete
54d33bcb37f5: Pull complete
e8afc091c171: Pull complete
b4541f6d3db6: Pull complete
Digest: sha256:8004747f1e8cd820a148fb7499d71a76d45ff66bac6a29129bfdbfdc0154d146
Status: Downloaded newer image for registry:2

root@ip-172-31-13-74:/registry# cd auth

root@ip-172-31-13-74:/registry/auth# ls
htpasswd

creating encrypted password:
root@ip-172-31-13-74:/registry/auth# cat htpasswd
docker:$2y$05$WElHMAaaN0ixXxhh6uAkzu1rXF6UsM1whBzQ7wENOsIb3PmiBb5lK

Creating certs directory:
root@ip-172-31-13-74:/registry/auth# 
$ mkdir certs

writing/generating new private key

root@ip-172-31-13-74:/registry/auth# 
$ mkdir certs



root@ip-172-31-13-74:/registry/auth# openssl req -newkey rsa:4096 -nodes -sha256 -keyout certs/domain.key -x509 -days 365 -out certs/domain.crt
Can't load /root/.rnd into RNG
140548380828096:error:2406F079:random number generator:RAND_load_file:Cannot open file:../crypto/rand/randfile.c:88:Filename=/root/.rnd
Generating a RSA private key
..............................................................................................................................................................................................................................................++++
.....................................................++++
writing new private key to 'certs/domain.key'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:
State or Province Name (full name) [Some-State]:
Locality Name (eg, city) []:
Organization Name (eg, company) [Internet Widgits Pty Ltd]:
Organizational Unit Name (eg, section) []:
Common Name (e.g. server FQDN or YOUR name) []:
Email Address []:

root@ip-172-31-13-74:/registry/auth# 
$ cd certs
        
          domain.crt and domain.key are present inside certs directory
          root@ip-172-31-13-74:/registry/auth/certs# ls
	  domain.crt  domain.key

	  root@ip-172-31-13-74:/registry/auth/certs# 
	  $ cd ..

	  Encrypted password is stored under file htpassword
	   root@ip-172-31-13-74:/registry/auth# ls
	   $ certs  htpasswd

---------Start the registry with basic authentication
root@ip-172-31-13-74:/registry/auth# 
$ docker run -d -p 443:443 --restart=always --name registry -v /root/registry/auth:/auth -e REGISTRY_HTTP_ADDR=0.0.0.0:443 -e REGISTRY_AUTH=htpasswd -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd -v /root/registry/auth/certs:/certs -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key registry:2
fc5afb4924496268b2c2965acb7ac0221630ce8bdb0f552e6d01a456de46b70c

root@ip-172-31-13-74:/registry/auth# docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS                          PORTS               NAMES
fc5afb492449        registry:2          "/entrypoint.sh /etc…"   About a minute ago   Restarting (1) 22 seconds ago                       registry

root@ip-172-31-13-74:/registry/auth# 
$ cd ~

After starting the registry . Go to root directory and login with localhost:443 , after give username as docker and password as "d0ck3rrU73z"
          
root@ip-172-31-13-74:~# docker login localhost:443
Username: docker
Password:
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded


------- PUll ubuntu image from dockerhub -----------------

root@ip-172-31-13-74:~# 
$ docker pull ubuntu
Using default tag: latest
latest: Pulling from library/ubuntu
Digest: sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d
Status: Image is up to date for ubuntu:latest
docker.io/library/ubuntu:latest

root@ip-172-31-13-74:~# 
$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
<none>              <none>              a741d1324bfe        3 hours ago         91.7MB
ubuntu                 latest              775349758637        2 weeks ago         64.2MB
localhost:443/ubuntu   1                   775349758637        2 weeks ago         64.2MB


-------------tag base image of ubuntu with localhost:443/ubuntu-------

root@ip-172-31-13-74:~# docker tag ubuntu localhost:443/ubuntu:1
root@ip-172-31-13-74:~# docker push localhost:443/ubuntu:1
The push refers to repository [localhost:443/ubuntu]
e0b3afb09dc3: Pushed
6c01b5a53aac: Pushed
2c6ac8e5063e: Pushed
cc967c529ced: Pushed
1: digest: sha256:134c7fe821b9d359490cd009ce7ca322453f4f2d018623f849e580a89a685e5d size: 1152

root@ip-172-31-13-74:~# 
$ docker image rm localhost:443/ubuntu:1 ubuntu
Untagged: localhost:443/ubuntu:1
Untagged: localhost:443/ubuntu@sha256:134c7fe821b9d359490cd009ce7ca322453f4f2d018623f849e580a89a685e5d
Untagged: ubuntu:latest


                         for testing purpose remove the image of ubuntu and localhost:443/ubuntu from local repo
                    and try to fetch from localhost:443/ubuntu image from registry

docker image rm localhost:443/ubuntu:1 ubuntu
Untagged: localhost:443/ubuntu:1
Untagged: localhost:443/ubuntu@sha256:134c7fe821b9d359490cd009ce7ca322453f4f2d018623f849e580a89a685e5d
Error response from daemon: conflict: unable to remove repository reference "ubuntu" (must force) - container 139d36e239eb is using its referenced image 775349758637

root@ip-172-31-13-74:~# docker image rmi -f localhost:443/ubuntu:latest ubuntu
Untagged: ubuntu:latest
Untagged: ubuntu@sha256:6e9f67fa63b0323e9a1e587fd71c561ba48a034504fb804fd26fd8800039835d
Error: No such image: localhost:443/ubuntu:latest

REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
registry            2                   f32a97de94e1        8 months ago        25.8MB



docker pull localhost:443/ubuntu:1
1: Pulling from ubuntu
Digest: sha256:134c7fe821b9d359490cd009ce7ca322453f4f2d018623f849e580a89a685e5d
Status: Downloaded newer image for localhost:443/ubuntu:1
localhost:443/ubuntu:1


REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
localhost:443/ubuntu   1                   775349758637        2 weeks ago         64.2MB
registry               2                   f32a97de94e1        8 months ago        25.8MB